import java.awt.*;
import java.util.*;

public class Train
{
    ArrayList<RailCar> railCars = new ArrayList<RailCar>();
    private int startX;
    private int startY;
    Color color;
    int counter;
    int position;
    RailCar temp;
    public Train(int startX, int startY)
    {
        this.startX = startX;
        this.startY = startY;
        counter = 0;
    }
    
    public void addCar(String carType, Color color)
    {
        this.color = color;
        counter += 1;

        if(carType == "Locomotive")
        {
            if (counter != 1)
            {
                setStartX(getStartX() + 175);
            }
            RailCar loco = new Locomotive(color, getStartX(), getStartY());
            railCars.add(loco);
        }
        else if(carType == "PassengerCar")
        {
            if (counter != 1)
            {
                setStartX(getStartX() + 175);
            }
            RailCar pass = new PassengerCar(color, getStartX(), getStartY());
            railCars.add(pass);
        }
        else if(carType == "FreightCar")
        {
            if (counter != 1)
            {
                setStartX(getStartX() + 175);
            }
            RailCar freight = new FreightCar(color, getStartX(), getStartY());
            railCars.add(freight);
        }
        else if(carType == "Caboose")
        {
            if (counter != 1)
            {
                setStartX(getStartX() + 175);
            }
            RailCar cab = new Caboose(color, getStartX(), getStartY());
            railCars.add(cab);
        }
    }
    
    public void addCar(int position, String carType, Color color)
    {
        this.color = color;
        counter += 1;
        setStartX(((position) * 175)+100);
        int tempX = getStartX() + 175;
        
        if(carType == "Locomotive")
        {
            RailCar loco = new Locomotive(color, getStartX(), getStartY());
            
                ArrayList<RailCar> temp = new ArrayList<RailCar>();
                int ind = 0;

                for(int m = position; m < railCars.size(); m++)
                {
                    //railCars.set(m, new RailCar(color, getStartX()+175, getStartY()));
                    temp.add(new RailCar(color, tempX, getStartY()));
                    tempX += 175;
                }
                for(int t = position; t < railCars.size(); t++)
                {
                    railCars.remove(t);
                }        
                railCars.add(position,loco);
                for(int w = (position + 1); w < railCars.size(); w++)
                {
                    railCars.add(w,temp.get(ind));
                    ind++;
                }
        }
        else if(carType == "PassengerCar")
        {
            RailCar pass = new PassengerCar(color, getStartX(), getStartY());
            
                ArrayList<RailCar> temp = new ArrayList<RailCar>();
                int ind = 0;
                for(int m = position; m < railCars.size(); m++)
                {
                    temp.add(new RailCar(color, tempX, getStartY()));
                    tempX += 175;
                }
                for(int t = position; t < railCars.size(); t++)
                {
                    railCars.remove(t);
                }        
                railCars.add(position,pass);
                for(int w = (position + 1); w < railCars.size(); w++)
                {
                    railCars.add(w,temp.get(ind));
                    ind++;
                }
        }
        else if(carType == "FreightCar")
        {
            RailCar freight = new FreightCar(color, getStartX(), getStartY());
            
                ArrayList<RailCar> temp = new ArrayList<RailCar>();
                int ind = 0;
                for(int m = position; m < railCars.size(); m++)
                {
                    temp.add(new RailCar(color, tempX, getStartY()));
                    tempX += 175;
                }
                for(int t = position; t < railCars.size(); t++)
                {
                    railCars.remove(t);
                }        
                railCars.add(position,freight);
                for(int w = (position + 1); w < railCars.size(); w++)
                {
                    railCars.add(w,temp.get(ind));
                    ind++;
                }
        }
        else if(carType == "Caboose")
        {
            RailCar cab = new Caboose(color, getStartX(), getStartY());
            
                ArrayList<RailCar> temp = new ArrayList<RailCar>();
                int ind = 0;
                for(int m = position; m < railCars.size(); m++)
                {
                    temp.add(new RailCar(color, tempX, getStartY()));
                    tempX += 175;
                }
                for(int t = position; t < railCars.size(); t++)
                {
                    railCars.remove(t);
                }        
                railCars.add(position,cab);
                for(int w = (position + 1); w < railCars.size(); w++)
                {
                    railCars.add(w,temp.get(ind));
                    ind++;
                }
        }
    }
    
    public void showCars(Graphics g)
    {
        for(RailCar railCar: railCars)
        {
            railCar.drawCar(g);
        }
    }
    public int getStartX()      {return startX;}
    public int getStartY()      {return startY;}
    public void setStartX(int startX)   {this.startX = startX;}
    public void setStartY(int startY)   {this.startY = startY;}
    public int getCounter()     {return counter;}
}
    
